visual 2019 기준

direct 헤더 매크로 설정
보기 -> 속성 관리자 -> Debug | Win32 우클릭 -> 새 프로젝트 속성 시트 추가 ->
만든 시트에 사용자 매크로에 가서 경로를 매크로로 정의
전반적인 프로젝트 세팅
프로젝트 우클릭 -> 속성
2.1) V/C++ 디렉터리
포함 디렉터리 라이브러리디렉터리
(DL) 추가
2.2) C / C++ -> 일반 -> 추가 포함 디렉터리

./;../../_Libraries
의미 : 프로젝트 경로에 있는 디렉터리 사용, 상위 경로 2개 위에 _Libraries 폴더 디렉터리 사용
2.3) C / C++ -> 언어

준수 모드 -> 아니요
2.4) 미리 컴파일된 헤더

사용
미리 컴파일된 헤더 파일명이 stdafx.h가 아닌 다른 이름을 쓸 것이라면 여기도 수정
2.5) 링커 -> 모든 온셥 -> 추가 라이브러리 디렉터리

../../_Libraries
사용하고자 하는 라이브러리의 디렉터리 추가
2.6) 미리 컴파일된 헤더의 .cpp는 만들기로 설정

2.7) .obj가 나오는 파일 경로를 바꾸고 싶으면

프로젝트 속성 -> 일반 -> 중간 디렉터리에서 변경
매크로 중에 솔루션 경로로 하게 해주는 매크로가 있음 -> $(SolutionDir) / 검색하면 나옴
경로 설정 후 \ 를 잊지 않고 붙이기
2.8) 내 프로젝트에서 Framework가 lib라면 빌드 순서를 맞춰주어야 함

UnitTest 프로젝트 우클릭 -> 빌드 종속성 -> 프로젝트 종속성 -> Framework에 종속 클릭 후 빌드 순서 확인
.lib -> .exe 프로젝트 순서로 빌드되게 해야 함
2.9) lib파일 .exe 프로젝트의 경로로 복사하기

Framework 프로젝트 우클릭 -> 속성 -> 빌드 이벤트 -> 빌드 후 이벤트 -> 명령줄에 다음 명령어 작성
copy /Y "$(SolutionDir)Debug$(ProjectName).lib" "$(SolutionDir)UnitTest"
copy /Y "$(SolutionDir)Debug$(ProjectName).pdb" "$(SolutionDir)UnitTest"
/Y의 의미 : 파일이 있어도 덮어 씌움
솔루션 디렉터리의 Debug 폴더에 있는 Framework.lib랑 Framework.pdb를 솔루션 디렉터리의 UnitTest 폴더로 복사하겠다는 의미

필독
끝내기 전에 한 가지 더

필터를 만들어서 사용하는 경우 실제 경로에 있는 폴더의 이름이랑 맞추어서 사용하는 것이 좋음
이 때 .h랑 .cpp 등 파일들을 복사할 때 미리 프로젝트의 경로로 옮겨놓고 필터로 복사해야 경로가 안 꼬임

유용한 프로그램 설치 : 
확장 -> 확장 관리 후 뜬 창에서
Folder To Solution Folder 설치
hlsl tools for visual studio 설치
